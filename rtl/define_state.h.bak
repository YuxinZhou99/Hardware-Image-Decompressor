`ifndef DEFINE_STATE

// This defines the states
typedef enum logic [2:0] {
	S_IDLE,
	S_ENABLE_UART_RX,
	S_UART_RX,
	S_Milestone1
} top_state_type;

typedef enum logic [1:0] {
	S_RXC_IDLE,
	S_RXC_SYNC,
	S_RXC_ASSEMBLE_DATA,
	S_RXC_STOP_BIT
} RX_Controller_state_type;

typedef enum logic [2:0] {
	S_US_IDLE,
	S_US_STRIP_FILE_HEADER_1,
	S_US_STRIP_FILE_HEADER_2,
	S_US_START_FIRST_BYTE_RECEIVE,
	S_US_WRITE_FIRST_BYTE,
	S_US_START_SECOND_BYTE_RECEIVE,
	S_US_WRITE_SECOND_BYTE
} UART_SRAM_state_type;

typedef enum logic [3:0] {
	S_VS_WAIT_NEW_PIXEL_ROW,
	S_VS_NEW_PIXEL_ROW_DELAY_1,
	S_VS_NEW_PIXEL_ROW_DELAY_2,
	S_VS_NEW_PIXEL_ROW_DELAY_3,
	S_VS_NEW_PIXEL_ROW_DELAY_4,
	S_VS_NEW_PIXEL_ROW_DELAY_5,
	S_VS_FETCH_PIXEL_DATA_0,
	S_VS_FETCH_PIXEL_DATA_1,
	S_VS_FETCH_PIXEL_DATA_2,
	S_VS_FETCH_PIXEL_DATA_3
} VGA_SRAM_state_type;

typedef enum logic [6:0]{
	S_M1_IDLE,
	S_LI_0,
	S_LI_1,
	S_LI_2,
	S_LI_3,
	S_LI_4,
	S_LI_5,
	S_LI_6,
	S_LI_7,
	S_LI_8,
	S_LI_9,
	S_LI_10,
	S_LI_11,
	S_COMMON_0,
	S_COMMON_1,
	S_COMMON_2,
	S_COMMON_3,
	S_COMMON_4,
	S_COMMON_5,
	S_COMMON_6,
	S_COMMON_7,
	S_COMMON_8,
	S_COMMON_9,
	S_COMMON_10,
	S_COMMON_11,
	S_COMMON_12,
	S_COMMON_13,
	S_COMMON_14,
	S_COMMON_15,
	S_COMMON_16,
	S_COMMON_17,
	S_LO_0,
	S_LO_1,
	S_LO_2,
	S_LO_3,
	S_LO_4,
	S_LO_5,
	S_LO_6,
	S_LO_7,
	S_LO_8,
	S_LO_9,
	S_LO_10,
	S_LO_11,
	S_LO_12,
	S_LO_13,
	S_LO_14,
	S_LO_15,
	S_LO_16,
	S_LO_17,
	S_LO_18,
	S_LO_19,
	S_LO_20,
	S_LO_21,
	S_LO_22,
	S_LO_23,
	S_LO_24,
	S_LO_25,
	S_LO_26,
	S_LO_27,
	S_LO_28
	
} milestone1_state_type;

typedef enum logic [3:0]{
	S_M2_IDLE
	
} milestone2_state_type;

parameter VIEW_AREA_LEFT = 160,
	  VIEW_AREA_RIGHT = 480,
	  VIEW_AREA_TOP = 120,
	  VIEW_AREA_BOTTOM = 360,
	  U_OFFSET = 18'd38400,
          V_OFFSET = 18'd57600,
          RGB_OFFSET = 18'd146944,
	
	  S_OFFSET = 7'64,
	  BISTREAM_OFFSET = 18'd76800;

`define DEFINE_STATE 1
`endif
