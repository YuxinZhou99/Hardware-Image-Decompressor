`ifndef DEFINE_STATE

// This defines the states
typedef enum logic [2:0] {
	S_IDLE,
	S_ENABLE_UART_RX,
	S_UART_RX,
	S_Milestone1,
	S_Milestone2
} top_state_type;

typedef enum logic [1:0] {
	S_RXC_IDLE,
	S_RXC_SYNC,
	S_RXC_ASSEMBLE_DATA,
	S_RXC_STOP_BIT
} RX_Controller_state_type;

typedef enum logic [2:0] {
	S_US_IDLE,
	S_US_STRIP_FILE_HEADER_1,
	S_US_STRIP_FILE_HEADER_2,
	S_US_START_FIRST_BYTE_RECEIVE,
	S_US_WRITE_FIRST_BYTE,
	S_US_START_SECOND_BYTE_RECEIVE,
	S_US_WRITE_SECOND_BYTE
} UART_SRAM_state_type;

typedef enum logic [3:0] {
	S_VS_WAIT_NEW_PIXEL_ROW,
	S_VS_NEW_PIXEL_ROW_DELAY_1,
	S_VS_NEW_PIXEL_ROW_DELAY_2,
	S_VS_NEW_PIXEL_ROW_DELAY_3,
	S_VS_NEW_PIXEL_ROW_DELAY_4,
	S_VS_NEW_PIXEL_ROW_DELAY_5,
	S_VS_FETCH_PIXEL_DATA_0,
	S_VS_FETCH_PIXEL_DATA_1,
	S_VS_FETCH_PIXEL_DATA_2,
	S_VS_FETCH_PIXEL_DATA_3
} VGA_SRAM_state_type;

typedef enum logic [6:0]{
	S_M1_IDLE,
	S_LI_0,
	S_LI_1,
	S_LI_2,
	S_LI_3,
	S_LI_4,
	S_LI_5,
	S_LI_6,
	S_LI_7,
	S_LI_8,
	S_LI_9,
	S_LI_10,
	S_LI_11,
	S_COMMON_0,
	S_COMMON_1,
	S_COMMON_2,
	S_COMMON_3,
	S_COMMON_4,
	S_COMMON_5,
	S_COMMON_6,
	S_COMMON_7,
	S_COMMON_8,
	S_COMMON_9,
	S_COMMON_10,
	S_COMMON_11,
	S_LO_0,
	S_LO_1,
	S_LO_2,
	S_LO_3,
	S_LO_4,
	S_LO_5,
	S_LO_6,
	S_LO_7,
	S_LO_8,
	S_LO_9,
	S_LO_10,
	S_LO_11,
	S_LO_12,
	S_LO_13,
	S_LO_14,
	S_LO_15,
	S_LO_16,
	S_LO_17,
	S_LO_18,
	S_LO_19,
	S_LO_20,
	S_LO_21
	
} milestone1_state_type;

typedef enum logic [6:0]{
	S_M2_IDLE,
	S_M3_in_M2,
	S_M2_LI_0,
	S_M2_LI_1,
	S_M2_LI_FETCH_SP,
	S_M2_LI_WAIT_T,
	S_M2_LI_FETCH_T_0,
	S_M2_LI_FETCH_T_1,
	S_M2_LI_FETCH_T_2,
	S_M2_LI_FETCH_T_3,
	S_M2_LI_FETCH_T_4,
	S_M2_LI_FETCH_T_5,
	S_M2_LI_FETCH_T_6,
	S_M2_LI_FETCH_T_7,
	S_M2_DELAY_0,
	S_M2_DELAY_1,
	S_M2_DELAY_2,
	S_M2_DELAY_3,
	S_M2_DELAY_4,
	S_M2_DELAY_5,
	S_M2_DELAY_6,
	S_M2_DELAY_7,
	S_M2_DELAY_8,
	S_M2_DELAY_9,
	S_M2_DELAY_10,
	S_M2_DELAY_11,
	S_M2_DELAY_12,
	S_M2_DELAY_13,
	S_M2_DELAY_14,
	S_M2_DELAY_15,
	S_M2_DELAY_16,
	S_M2_DELAY_17,
	S_M2_DELAY_18,
	S_M2_DELAY_19,
	S_M2_DELAY_20,
	S_M2_DELAY_21,
	S_M2_DELAY_22,
	S_M2_DELAY_23,
	S_M2_DELAY_24,
	S_M2_DELAY_25,
	S_M2_DELAY_26,
	S_M2_DELAY_27,
	S_M2_DELAY_28,
	S_M2_DELAY_29,
	S_M2_DELAY_30,
	S_M2_DELAY_31,
	S_M2_DELAY_32,
	S_M2_DELAY_33,
	S_M2_DELAY_34,
	S_M2_DELAY_35,
	S_M2_DELAY_36,
	S_M2_DELAY_37,
	S_M2_DELAY_38,
	S_M2_DELAY_39,
	S_M2_DELAY_40,
	S_M2_DELAY_41,
	S_M2_DELAY_42,
	S_M2_DELAY_43,
	S_M2_DELAY_44,
	S_M2_DELAY_45,
	S_M2_DELAY_46,
	S_M2_DELAY_47,
	S_M2_DELAY_48,
	S_M2_DELAY_49,
	S_M2_DELAY_50,
	S_M2_DELAY_51,
	S_M2_DELAY_52,
	S_M2_DELAY_53,
	S_M2_DELAY_54,
	S_M2_DELAY_55,
	S_M2_DELAY_56,
	S_M2_DELAY_57,
	S_M2_DELAY_58,
	S_M2_DELAY_59,
	S_M2_DELAY_60,
	S_M2_WAIT_S_0,
	S_M2_WAIT_S_1,
	S_M2_OVERLAP_S_0,
	S_M2_OVERLAP_S_1,
	S_M2_OVERLAP_S_2,
	S_M2_OVERLAP_S_3,
	S_M2_OVERLAP_S_4,
	S_M2_OVERLAP_S_5,
	S_M2_OVERLAP_S_6,
	S_M2_OVERLAP_S_7,
	S_M2_OVERLAP_WRITE_S_WAIT,
	S_M2_OVERLAP_WRITE_S_WAIT_1,
	S_M2_OVERLAP_WRITE_S_WAIT_2,
	S_M2_OVERLAP_WRITE_S_WAIT_3,
	S_M2_OVERLAP_WRITE_S_WAIT_4,
	S_M2_OVERLAP_WRITE_S_0,
	S_M2_OVERLAP_WRITE_S_1,
	S_M2_OVERLAP_WRITE_S_2,
	S_M2_OVERLAP_WRITE_S_3,
	S_M2_OVERLAP_WRITE_S_4,
	S_M2_OVERLAP_WRITE_S_5,
	S_M2_OVERLAP_WRITE_S_6,
	S_M2_OVERLAP_WRITE_S_7,
	S_M2_LO_WAIT_S_0,
	S_M2_LO_WAIT_S_1,
	S_M2_LO_COMP_S_0,
	S_M2_LO_COMP_S_1,
	S_M2_LO_COMP_S_2,
	S_M2_LO_COMP_S_3,
	S_M2_LO_COMP_S_4,
	S_M2_LO_COMP_S_5,
	S_M2_LO_COMP_S_6,
	S_M2_LO_COMP_S_7,
	S_M2_LO_WAIT_WRITE_S_0,
	S_M2_LO_WAIT_WRITE_S_1,
	S_M2_LO_WAIT_WRITE_S_2,
	S_M2_LO_WRITE_S_0,
	S_M2_LO_WRITE_S_1,
	S_M2_LO_WRITE_S_2
} milestone2_state_type;

typedef enum logic [4:0]{
	S_M3_IDLE,
	S_M3_LI_0,
	S_M3_LI_1,
	S_M3_FIRST_2BITS_0,
	S_M3_FIRST_2BITS_1,
	S_M3_READ_3_BITS,
	S_M3_SHIFT_BITS,
	S_M3_IDLE_COMMON,
	S_M3_LI_COMMON_0,
	S_M3_FIRST_2BITS_COMMON_0,
	S_M3_FIRST_2BITS_COMMON_1,
	S_M3_READ_3_BITS_COMMON,
	S_M3_SHIFT_BITS_COMMON,
	S_M3_TEST,
	S_M3_TEST_1,
	S_M3_TEST_2

} milestone3_state_type;

parameter VIEW_AREA_LEFT = 160,
	  VIEW_AREA_RIGHT = 480,
	  VIEW_AREA_TOP = 120,
	  VIEW_AREA_BOTTOM = 360,
	  U_OFFSET = 18'd38400,
    	  V_OFFSET = 18'd57600,
    	  RGB_OFFSET = 18'd146944,

	  PRE_IDCT_OFFSET= 18'd76800,
	  PRE_IDCT_OFFSET_U= 18'd153600,
	  PRE_IDCT_OFFSET_V= 18'd192000,
	  Y_WRITE_OFFSET = 18'd0,
	  U_WRITE_OFFSET = 18'd38400,
	  V_WRITE_OFFSET = 18'd57600,

	  BIST_OFFSET = 18'd76800;

`define DEFINE_STATE 1
`endif
